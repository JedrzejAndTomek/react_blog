{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\react_blog\\\\src\\\\components\\\\viewPost\\\\Comments.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Comments(props) {\n  const [Comment, setComment] = useState('');\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variables = {\n      comment: Comment,\n      postId: props.postId\n    };\n    axios.post('http://localhost:4000/create-comment', variables).then(res => {\n      if (res.data.success) {\n        setComment('');\n        props.refreshFunction(res.data.result);\n      } else {\n        console.log('check the code');\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"comment-box\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"textarea\",\n    className: \"comment\",\n    onChange: handleChange,\n    value: Comment,\n    placeholder: \"Add comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"comment-button\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Add Comment\")), console.log(props.commentsList));\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Programowanie/react_blog/src/components/viewPost/Comments.js"],"names":["React","useState","axios","Comments","props","Comment","setComment","handleChange","e","currentTarget","value","onSubmit","preventDefault","variables","comment","postId","post","then","res","data","success","refreshFunction","result","console","log","commentsList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,UAAU,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAV;AACH,GAFD;;AAMA,QAAMC,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;AAEA,UAAMC,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAET,OADK;AAEdU,MAAAA,MAAM,EAAEX,KAAK,CAACW;AAFA,KAAlB;AAKAb,IAAAA,KAAK,CAACc,IAAN,CAAW,sCAAX,EAAmDH,SAAnD,EACCI,IADD,CACMC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACC,IAAJ,CAASC,OAAZ,EAAoB;AAChBd,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,QAAAA,KAAK,CAACiB,eAAN,CAAsBH,GAAG,CAACC,IAAJ,CAASG,MAA/B;AACH,OAHD,MAGO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,KARD;AASH,GAjBD;;AAmBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEb,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAC,SAAjC;AACA,IAAA,QAAQ,EAAEJ,YADV;AAEA,IAAA,KAAK,EAAEF,OAFP;AAGA,IAAA,WAAW,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,EAOA;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAEM,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPA,CAFJ,EAWKY,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACqB,YAAlB,CAXL,CADJ;AAeH;;AAED,eAAetB,QAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Comments(props) {\r\n\r\n    const [Comment, setComment] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setComment(e.currentTarget.value)\r\n    }\r\n\r\n    \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            comment: Comment,\r\n            postId: props.postId\r\n        }\r\n\r\n        axios.post('http://localhost:4000/create-comment', variables)\r\n        .then(res => {\r\n            if(res.data.success){\r\n                setComment('')\r\n                props.refreshFunction(res.data.result)\r\n            } else {\r\n                console.log('check the code')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <form className='comment-box' onSubmit={onSubmit}>\r\n            <input type='textarea' className='comment'\r\n            onChange={handleChange}\r\n            value={Comment}\r\n            placeholder='Add comment'\r\n            />\r\n            <br />\r\n            <button className='comment-button' onClick={onSubmit}>Add Comment</button>\r\n            </form>\r\n            {console.log(props.commentsList)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}