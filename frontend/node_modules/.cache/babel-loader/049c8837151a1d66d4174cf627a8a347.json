{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\react_blog\\\\src\\\\components\\\\viewPost\\\\viewPost.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Comments from './Comments';\n\nclass ViewPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateComment = newComment => {\n      this.setState({\n        setCommentsList: this.state.commentList.concat(newComment)\n      });\n    };\n\n    this.state = {\n      email: '',\n      title: '',\n      content: '',\n      commentsList: [],\n      setCommentsList: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/articles/show-article/' + this.props.match.params.id).then(res => {\n      this.setState({\n        email: res.data.email,\n        title: res.data.title,\n        content: res.data.content\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentWillMount() {\n    axios.get('http://localhost:4000/comments/' + this.props.match.params.id).then(response => {\n      if (response.data.success) {\n        console.log('response.data.comments', response.data.comments);\n        this.state.setCommentList(response.data.comments);\n      } else {\n        alert('Failed to get Article Info');\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.title, this.state.content, this.state.email, React.createElement(Comments, {\n      commentsList: this.state.commentsList,\n      postId: this.props.match.params.id,\n      refreshFunction: this.updateComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ViewPost;","map":{"version":3,"sources":["C:/Programowanie/react_blog/src/components/viewPost/viewPost.js"],"names":["React","axios","Comments","ViewPost","Component","constructor","props","updateComment","newComment","setState","setCommentsList","state","commentList","concat","email","title","content","commentsList","componentDidMount","get","match","params","id","then","res","data","catch","error","console","log","componentWillMount","response","success","comments","setCommentList","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAIA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA4CRC,aA5CQ,GA4CSC,UAAD,IAAgB;AACtC,WAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,MAAvB,CAA8BL,UAA9B;AAAlB,OAAd;AACH,KA9CiB;;AAGb,SAAKG,KAAL,GAAa;AACVG,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,OAAO,EAAE,EAHC;AAIVC,MAAAA,YAAY,EAAE,EAJJ;AAKVP,MAAAA,eAAe,EAAE;AALP,KAAb;AAQJ;;AAODQ,EAAAA,iBAAiB,GAAG;AAChBjB,IAAAA,KAAK,CAACkB,GAAN,CAAU,iDAAiD,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnF,EACKC,IADL,CACUC,GAAG,IAAI;AACT,WAAKf,QAAL,CAAc;AACVK,QAAAA,KAAK,EAAEU,GAAG,CAACC,IAAJ,CAASX,KADN;AAEVC,QAAAA,KAAK,EAAES,GAAG,CAACC,IAAJ,CAASV,KAFN;AAGVC,QAAAA,OAAO,EAAEQ,GAAG,CAACC,IAAJ,CAAST;AAHR,OAAd;AAKH,KAPL,EAQKU,KARL,CAQYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVL;AAWH;;AAEEG,EAAAA,kBAAkB,GAAG;AACpB7B,IAAAA,KAAK,CAACkB,GAAN,CAAU,oCAAoC,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtE,EACKC,IADL,CACUQ,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACN,IAAT,CAAcO,OAAlB,EAA2B;AACvBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCE,QAAQ,CAACN,IAAT,CAAcQ,QAAnD;AACA,aAAKtB,KAAL,CAAWuB,cAAX,CAA0BH,QAAQ,CAACN,IAAT,CAAcQ,QAAxC;AACH,OAHD,MAGO;AACHE,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACH;AACJ,KARL;AASH;;AAKGC,EAAAA,MAAM,GAAG;AAKb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKzB,KAAL,CAAWI,KADhB,EAEK,KAAKJ,KAAL,CAAWK,OAFhB,EAGK,KAAKL,KAAL,CAAWG,KAHhB,EAII,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWM,YAAnC;AAAiD,MAAA,MAAM,EAAI,KAAKX,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,EAAnF;AAAuF,MAAA,eAAe,EAAE,KAAKf,aAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQK;;AA9D8B;;AAiEvC,eAAeJ,QAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport Comments from './Comments'\r\n\r\n   \r\n\r\nclass ViewPost extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n         this.state = {\r\n            email: '',\r\n            title: '',\r\n            content: '',\r\n            commentsList: [],\r\n            setCommentsList: []\r\n        }\r\n        \r\n    }\r\n         \r\n\r\n\r\n \r\n\r\n            \r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/articles/show-article/' + this.props.match.params.id)\r\n            .then(res => {\r\n                this.setState({\r\n                    email: res.data.email,\r\n                    title: res.data.title,\r\n                    content: res.data.content\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n       componentWillMount() {\r\n        axios.get('http://localhost:4000/comments/' + this.props.match.params.id)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log('response.data.comments',response.data.comments)\r\n                    this.state.setCommentList(response.data.comments)\r\n                } else {\r\n                    alert('Failed to get Article Info')\r\n                }\r\n            })\r\n    }\r\n\r\n              updateComment = (newComment) => {\r\n        this.setState({setCommentsList: this.state.commentList.concat(newComment)})\r\n    }\r\n        render (){\r\n            \r\n            \r\n            \r\n\r\n    return (\r\n        <div>\r\n            {this.state.title}\r\n            {this.state.content}\r\n            {this.state.email}\r\n            <Comments commentsList={this.state.commentsList} postId = {this.props.match.params.id} refreshFunction={this.updateComment}/>\r\n        </div>\r\n    )\r\n        }\r\n}\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}