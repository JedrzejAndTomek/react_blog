{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\src\\\\components\\\\CreatePost.js\";\nimport React from 'react';\nimport { Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport axios from 'axios';\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      let name = e.target.name;\n      let value = e.target.value;\n      let errTitle = '';\n      let errContent = '';\n      let errEm = ''; // walidacja tytułu    \n\n      if (name === \"title\") {\n        if (value.length <= 2 || value.length >= 20) {\n          errTitle = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"Your title must be more than 2 and less then 20 characters \");\n        }\n\n        this.setState({\n          errormessage: errTitle\n        });\n      } // walidacja treści  \n\n\n      if (name === \"content\") {\n        if (value.length <= 100 || value.length >= 800) {\n          errContent = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \"Your content must be more than 100 and less then 800 characters\");\n        }\n\n        this.setState({\n          errormessage: errContent\n        });\n      } // walidacja e-maila  \n\n\n      if (name === \"email\") {\n        if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\n          errEm = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Please enter valid e-mail\");\n        }\n\n        this.setState({\n          errormessage: errEm\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      //e.preventDefault()\n      const post = {\n        title: this.state.title,\n        content: this.state.content,\n        email: this.state.email\n      };\n      console.log(post);\n      axios.post('/posts', post).then(res => console.log(res.data));\n      this.setState({\n        title: \"\",\n        content: \"\",\n        email: \"\"\n      });\n      this.props.history.push('/');\n    };\n\n    this.state = {\n      title: \"\",\n      content: \"\",\n      email: \"\",\n      errormessage: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title:\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.errormessage), React.createElement(FormGroup, {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Content\"), React.createElement(Input, {\n      type: \"textarea\",\n      id: \"content\",\n      name: \"content\",\n      placeholder: \"Content:\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.errormessage), React.createElement(FormGroup, {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"textarea\",\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email:\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.errormessage), React.createElement(Col, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Programowanie/react_blog/frontend/src/components/CreatePost.js"],"names":["React","Col","Form","FormGroup","Label","Input","Button","axios","PostForm","Component","constructor","props","onChange","e","name","target","value","errTitle","errContent","errEm","length","setState","errormessage","test","onSubmit","post","title","state","content","email","console","log","then","res","data","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,GADJ,EAEIC,IAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,MANJ,QAOO,YAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,QAXmB,GAWPC,CAAD,IAAO;AAEd,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAApB;AACA,UAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,KAAK,GAAG,EAAZ,CANc,CASd;;AACA,UAAIL,IAAI,KAAK,OAAb,EAAqB;AACjB,YAAIE,KAAK,CAACI,MAAN,IAAgB,CAAhB,IAAqBJ,KAAK,CAACI,MAAN,IAAe,EAAxC,EAA2C;AACvCH,UAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAAX;AACH;;AACD,aAAKI,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEL;AAAf,SAAd;AACH,OAfa,CAiBd;;;AACA,UAAIH,IAAI,KAAK,SAAb,EAAuB;AACnB,YAAIE,KAAK,CAACI,MAAN,IAAgB,GAAhB,IAAuBJ,KAAK,CAACI,MAAN,IAAe,GAA1C,EAA+C;AAC3CF,UAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAAb;AACH;;AACD,aAAKG,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEJ;AAAf,SAAd;AACH,OAvBa,CAyBb;;;AACD,UAAIJ,IAAI,KAAK,OAAb,EAAsB;AAClB,YAAI,CAAC,8DAA8DS,IAA9D,CAAmEP,KAAnE,CAAL,EAAgF;AAC5EG,UAAAA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAR;AAEH;;AACD,aAAKE,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEH;AAAf,SAAd;AACH;;AAEG,WAAKE,QAAL,CAAc;AAAC,SAACP,IAAD,GAAQE;AAAT,OAAd;AACP,KA9CkB;;AAAA,SAgDnBQ,QAhDmB,GAgDPX,CAAD,IAAO;AACd;AAEA,YAAMY,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADT;AAETE,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAFX;AAGTC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAHT,OAAb;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEAlB,MAAAA,KAAK,CAACkB,IAAN,CAAW,QAAX,EAAqBA,IAArB,EACCO,IADD,CACMC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,IAAhB,CADb;AAGA,WAAKb,QAAL,CAAc;AACVK,QAAAA,KAAK,EAAE,EADG;AAEVE,QAAAA,OAAO,EAAE,EAFC;AAGVC,QAAAA,KAAK,EAAE;AAHG,OAAd;AAMA,WAAKlB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,KArEkB;;AAGf,SAAKT,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITP,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AA8DDe,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKb,QAArB;AAA+B,MAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAA2C,MAAA,WAAW,EAAC,QAAvD;AAAgE,MAAA,QAAQ,EAAE,KAAKZ,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKe,KAAL,CAAWL,YAAhB,CALJ,EAMI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,SAA1B;AAAoC,MAAA,IAAI,EAAC,SAAzC;AAAmD,MAAA,WAAW,EAAC,UAA/D;AAA0E,MAAA,QAAQ,EAAE,KAAKV,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKe,KAAL,CAAWL,YAAhB,CAVJ,EAWI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAA+C,MAAA,WAAW,EAAC,QAA3D;AAAoE,MAAA,QAAQ,EAAE,KAAKV,QAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKe,KAAL,CAAWL,YAAhB,CAfJ,EAgBI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B,CAhBJ,CADJ,CADJ;AAsBH;;AA/FkC;;AAkGvC,eAAed,QAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\",\r\n            errormessage: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let errTitle = '';\r\n        let errContent = '';\r\n        let errEm = '';\r\n\r\n\r\n        // walidacja tytułu    \r\n        if (name === \"title\"){\r\n            if (value.length <= 2 || value.length >=20){\r\n                errTitle = <strong>Your title must be more than 2 and less then 20 characters </strong>;\r\n            }  \r\n            this.setState({errormessage: errTitle});\r\n        }\r\n\r\n        // walidacja treści  \r\n        if (name === \"content\"){\r\n            if (value.length <= 100 || value.length >=800 ){\r\n                errContent = <strong>Your content must be more than 100 and less then 800 characters</strong>;\r\n            }  \r\n            this.setState({errormessage: errContent});\r\n        }\r\n\r\n         // walidacja e-maila  \r\n        if (name === \"email\") {\r\n            if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\r\n                errEm = <strong>Please enter valid e-mail</strong>;\r\n\r\n            }\r\n            this.setState({errormessage: errEm});\r\n        }\r\n\r\n            this.setState({[name]: value});\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        //e.preventDefault()\r\n\r\n        const post = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            email: this.state.email\r\n        }\r\n        \r\n        console.log(post);\r\n\r\n        axios.post('/posts', post)\r\n        .then(res => console.log(res.data))\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\"\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.onSubmit} className=\"form\">\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title:\" onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <h4>{this.state.errormessage}</h4>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Content\">Content</Label>\r\n                        <Input type=\"textarea\" id=\"content\" name=\"content\" placeholder=\"Content:\" onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <h4>{this.state.errormessage}</h4>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Email\">Email</Label>\r\n                        <Input type=\"textarea\" id=\"email\" name=\"email\" placeholder=\"Email:\" onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <h4>{this.state.errormessage}</h4>\r\n                    <Col className=\"text-center\"><Button type=\"submit\">Submit</Button></Col>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}