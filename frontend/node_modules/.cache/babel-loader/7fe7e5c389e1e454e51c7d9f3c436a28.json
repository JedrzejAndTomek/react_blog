{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\src\\\\components\\\\CreatePost.js\";\nimport React from 'react';\nimport { Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport axios from 'axios';\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      let name = e.target.name;\n      let value = e.target.value;\n      let errTitle = '';\n      let errContent = '';\n      let errEm = ''; // walidacja tytułu    \n\n      if (name === \"title\") {\n        if (value.length <= 2 || value.length >= 20) {\n          errTitle = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"Your title must be more than 2 and less then 20 characters \");\n        }\n\n        this.setState({\n          errTitle: errTitle\n        });\n      } // walidacja treści  \n\n\n      if (name === \"content\") {\n        if (value.length <= 100 || value.length >= 800) {\n          errContent = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"Your content must be more than 100 and less then 800 characters\");\n        }\n\n        this.setState({\n          errContent: errContent\n        });\n      } // walidacja e-maila  \n\n\n      if (name === \"email\") {\n        if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\n          errEm = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"Please enter valid e-mail\");\n        }\n\n        this.setState({\n          errEm: errEm\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.selectedImage = e => {\n      this.setState({\n        postImage: e.target.files[0]\n      });\n    };\n\n    this.onSubmit = () => {\n      //e.preventDefault()\n      const post = {\n        title: this.state.title,\n        content: this.state.content,\n        email: this.state.email\n      };\n      const fd = new FormData();\n      fd.append('postImage', this.state.postImage, this.state.postImage.name);\n      axios.post('/posts', post, fd).then(res => console.log(res.data)); // axios.post('/posts', post)\n      //.then(res => console.log(res.data))\n\n      this.setState({\n        title: \"\",\n        content: \"\",\n        email: \"\",\n        postImage: null\n      });\n      console.log(post);\n      this.props.history.push('/');\n    };\n\n    this.state = {\n      title: \"\",\n      content: \"\",\n      email: \"\",\n      postImage: null,\n      errTitle: \"\",\n      errContent: \"\",\n      errEm: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      className: \"form\",\n      enctype: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title:\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.errTitle)), React.createElement(FormGroup, {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Content\"), React.createElement(Input, {\n      type: \"textarea\",\n      id: \"content\",\n      name: \"content\",\n      placeholder: \"Content:\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.errContent)), React.createElement(FormGroup, {\n      className: \"mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"textarea\",\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email:\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.errEm)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"postImage\",\n      ref: fileInput => this.fileInput = fileInput,\n      onChange: this.selectedImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Col, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Programowanie/react_blog/frontend/src/components/CreatePost.js"],"names":["React","Col","Form","FormGroup","Label","Input","Button","axios","PostForm","Component","constructor","props","onChange","e","name","target","value","errTitle","errContent","errEm","length","setState","test","selectedImage","postImage","files","onSubmit","post","title","state","content","email","fd","FormData","append","then","res","console","log","data","history","push","render","fileInput"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\",\r\n            postImage: null,\r\n            errTitle: \"\",\r\n            errContent: \"\",\r\n            errEm: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let errTitle = '';\r\n        let errContent = '';\r\n        let errEm = '';\r\n\r\n\r\n        // walidacja tytułu    \r\n        if (name === \"title\"){\r\n            if (value.length <= 2 || value.length >=20){\r\n                errTitle = <strong>Your title must be more than 2 and less then 20 characters </strong>;\r\n            }  \r\n            this.setState({errTitle: errTitle});\r\n        }\r\n\r\n        // walidacja treści  \r\n        if (name === \"content\"){\r\n            if (value.length <= 100 || value.length >=800 ){\r\n                errContent = <strong>Your content must be more than 100 and less then 800 characters</strong>;\r\n            }  \r\n            this.setState({errContent: errContent});\r\n        }\r\n\r\n         // walidacja e-maila  \r\n        if (name === \"email\") {\r\n            if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\r\n                errEm = <strong>Please enter valid e-mail</strong>;\r\n\r\n            }\r\n            this.setState({errEm: errEm});\r\n        }\r\n\r\n            this.setState({[name]: value});\r\n    }\r\n\r\n    // wybranie zdjecia\r\n    selectedImage = e => {\r\n        this.setState({\r\n            postImage: e.target.files[0]\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    onSubmit = () => {\r\n        //e.preventDefault()\r\n\r\n         const post = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            email: this.state.email\r\n        }\r\n\r\n        const fd = new FormData();\r\n        fd.append('postImage', this.state.postImage, this.state.postImage.name);\r\n\r\n        axios.post('/posts',post, fd)\r\n        .then(res => console.log(res.data))\r\n        \r\n       \r\n\r\n        // axios.post('/posts', post)\r\n        //.then(res => console.log(res.data))\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\",\r\n            postImage: null\r\n        })\r\n\r\n         \r\n       console.log(post);\r\n      \r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.onSubmit} className=\"form\" enctype=\"multipart/form-data\">\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title:\" onChange={this.onChange} />\r\n                        <h6>{this.state.errTitle}</h6>\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Content\">Content</Label>\r\n                        <Input type=\"textarea\" id=\"content\" name=\"content\" placeholder=\"Content:\" onChange={this.onChange} />\r\n                        <h6>{this.state.errContent}</h6>\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Email\">Email</Label>\r\n                        <Input type=\"textarea\" id=\"email\" name=\"email\" placeholder=\"Email:\" onChange={this.onChange} />\r\n                        <h6>{this.state.errEm}</h6>\r\n                    </FormGroup>\r\n                    \r\n                        <div>\r\n                        <input type=\"file\" id=\"postImage\" ref={fileInput => this.fileInput = fileInput} onChange={this.selectedImage}/>\r\n                        </div>\r\n\r\n                    <Col className=\"text-center\"><Button type=\"submit\">Submit</Button></Col>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}