{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\react_blog\\\\src\\\\components\\\\addArticle.js\";\nimport React from 'react';\nimport axios from 'axios';\nexport default class AddArticle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      let errEm = '';\n      let errTitle = '';\n      let errContent = '';\n\n      if (name === \"email\") {\n        if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\n          errEm = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, \"Please enter valid email\");\n        }\n\n        this.setState({\n          errormessage: errEm\n        });\n      }\n\n      if (name === \"title\") {\n        if (value.length <= 2 || value.length >= 20) {\n          errTitle = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"Your title must be more than 2 and less then 20 characters \");\n        }\n\n        this.setState({\n          errormessage: errTitle\n        });\n      }\n\n      if (name === \"content\") {\n        if (value.length <= 100 || value.length >= 800) {\n          errContent = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \"Your content must be more than 100 and less then 800 characters\");\n        }\n\n        this.setState({\n          errormessage: errContent\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const article = {\n        email: this.state.email,\n        title: this.state.title,\n        content: this.state.content\n      };\n      axios.post('http://localhost:4000/articles/create-article', article).then(res => console.log(res.data));\n      this.setState({\n        email: '',\n        title: '',\n        content: ''\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      title: \"\",\n      content: \"\",\n      errormessage: \"\",\n      fruit: \"\"\n    };\n  } // walidacja formularza     \n\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Please enter your e-mail:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.myChangeHandler,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Please enter title:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: this.myChangeHandler,\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Please enter fruit:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fruit\",\n      onChange: this.myChangeHandler,\n      value: this.state.fruit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Please enter content:\"), React.createElement(\"textarea\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"content\",\n      onChange: this.myChangeHandler,\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.errormessage));\n  }\n\n}","map":{"version":3,"sources":["C:/Programowanie/react_blog/src/components/addArticle.js"],"names":["React","axios","AddArticle","Component","constructor","props","myChangeHandler","event","name","target","value","errEm","errTitle","errContent","test","setState","errormessage","length","onSubmit","e","preventDefault","article","email","state","title","content","post","then","res","console","log","data","fruit","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,eAdmB,GAcAC,KAAD,IAAW;AACzB,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;AACA,UAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAIL,IAAI,KAAK,OAAb,EAAsB;AAClB,YAAI,CAAC,8DAA8DM,IAA9D,CAAmEJ,KAAnE,CAAL,EAAgF;AAC5EC,UAAAA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAR;AAEH;;AACD,aAAKI,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEL;AAAf,SAAd;AACH;;AAID,UAAIH,IAAI,KAAK,OAAb,EAAqB;AACjB,YAAIE,KAAK,CAACO,MAAN,IAAgB,CAAhB,IAAqBP,KAAK,CAACO,MAAN,IAAe,EAAxC,EAA2C;AACvCL,UAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAAX;AACH;;AACD,aAAKG,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEJ;AAAf,SAAd;AACH;;AAGD,UAAIJ,IAAI,KAAK,SAAb,EAAuB;AACnB,YAAIE,KAAK,CAACO,MAAN,IAAgB,GAAhB,IAAuBP,KAAK,CAACO,MAAN,IAAe,GAA1C,EAA+C;AAC3CJ,UAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAAb;AACH;;AACD,aAAKE,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEH;AAAf,SAAd;AACH;;AAID,WAAKE,QAAL,CAAc;AAAC,SAACP,IAAD,GAAQE;AAAT,OAAd;AACH,KAjDkB;;AAAA,SAoDfQ,QApDe,GAoDHC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,OAAO,GAAG;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADN;AAEZE,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFN;AAGZC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AAHR,OAAhB;AAMAxB,MAAAA,KAAK,CAACyB,IAAN,CAAW,+CAAX,EAA4DL,OAA5D,EACKM,IADL,CACUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADjB;AAGA,WAAKhB,QAAL,CAAc;AACVO,QAAAA,KAAK,EAAE,EADG;AAEVE,QAAAA,KAAK,EAAE,EAFG;AAGVC,QAAAA,OAAO,EAAE;AAHC,OAAd;AAKH,KArEkB;;AAEf,SAAKF,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITT,MAAAA,YAAY,EAAE,EAJL;AAKTgB,MAAAA,KAAK,EAAE;AALE,KAAb;AAQH,GAXmD,CAapD;;;AA4DAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKf,QAArB;AAA+B,MAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,QAAQ,EAAE,KAAKZ,eAHnB;AAII,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWD,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ,EASI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,QAAQ,EAAE,KAAKhB,eAHnB;AAII,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWC,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAhBJ,EAiBI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,QAAQ,EAAE,KAAKlB,eAHnB;AAII,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWS,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAxBJ,EAyBI;AAAU,MAAA,SAAS,EAAC,WAApB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,QAAQ,EAAE,KAAK1B,eAHnB;AAII,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWE,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,EA+BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BR,EA+Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/Bb,EAiCQ;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCR,EAmCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWP,YAAhB,CAnCR,CADJ;AA0CH;;AApHmD","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class AddArticle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            title: \"\",\r\n            content: \"\",\r\n            errormessage: \"\",\r\n            fruit: \"\"\r\n           \r\n        };\r\n    }\r\n\r\n    // walidacja formularza     \r\n\r\n    myChangeHandler = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        let errEm = '';\r\n        let errTitle = '';\r\n        let errContent = '';\r\n\r\n        if (name === \"email\") {\r\n            if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\r\n                errEm = <strong>Please enter valid email</strong>;\r\n\r\n            }\r\n            this.setState({errormessage: errEm});\r\n        }\r\n        \r\n    \r\n\r\n        if (name === \"title\"){\r\n            if (value.length <= 2 || value.length >=20){\r\n                errTitle = <strong>Your title must be more than 2 and less then 20 characters </strong>;\r\n            }  \r\n            this.setState({errormessage: errTitle});\r\n        }\r\n\r\n        \r\n        if (name === \"content\"){\r\n            if (value.length <= 100 || value.length >=800 ){\r\n                errContent = <strong>Your content must be more than 100 and less then 800 characters</strong>;\r\n            }  \r\n            this.setState({errormessage: errContent});\r\n        }\r\n\r\n       \r\n\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n\r\n        onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const article = {\r\n            email: this.state.email,\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n        }\r\n\r\n        axios.post('http://localhost:4000/articles/create-article', article)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            email: '',\r\n            title: '',\r\n            content: ''\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} className=\"form\">\r\n                <p>Please enter your e-mail:</p>\r\n                <input\r\n                    type='text'\r\n                    name='email'\r\n                    onChange={this.myChangeHandler}\r\n                    value={this.state.email}\r\n                />\r\n                <p>Please enter title:</p>\r\n                <input\r\n                    type='text'\r\n                    name='title'\r\n                    onChange={this.myChangeHandler}\r\n                    value={this.state.title}\r\n                />\r\n\r\n                <p>Please enter fruit:</p>\r\n                <input\r\n                    type='text'\r\n                    name='fruit'\r\n                    onChange={this.myChangeHandler}\r\n                    value={this.state.fruit}\r\n                />\r\n\r\n                <p>Please enter content:</p>\r\n                <textarea className=\"text-area\"\r\n                    type='text'\r\n                    name='content'\r\n                    onChange={this.myChangeHandler}\r\n                    value={this.state.content}\r\n                />\r\n                    <br/><br/>\r\n\r\n                    <button className=\"submitButton\" type=\"submit\">Submit</button>\r\n\r\n                    <h4>{this.state.errormessage}</h4>\r\n\r\n            </form>\r\n\r\n                        \r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}