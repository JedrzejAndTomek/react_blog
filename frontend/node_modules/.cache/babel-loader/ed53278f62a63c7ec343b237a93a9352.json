{"ast":null,"code":"import _defineProperty from\"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Programowanie\\\\react_blog\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Col,Form,FormGroup,Label,Input,Button}from'reactstrap';import axios from'axios';var EditPost=/*#__PURE__*/function(_React$Component){_inherits(EditPost,_React$Component);function EditPost(props){var _this;_classCallCheck(this,EditPost);_this=_possibleConstructorReturn(this,_getPrototypeOf(EditPost).call(this,props));_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var editedPost={title:_this.state.title,content:_this.state.content,email:_this.state.email};axios.put(\"/posts/\"+_this.props.match.params.id,editedPost).then(function(res){return console.log(res.data);}).catch(function(error){return console.log(error);});_this.props.history.push('/');};_this.state={title:\"\",content:\"\",email:\"\"};return _this;}_createClass(EditPost,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(this.props.match.params.id);axios.get(\"/posts/\"+this.props.match.params.id).then(function(res){console.log(res);_this2.setState({title:res.data.title,content:res.data.content,email:res.data.email});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Form,{onSubmit:this.onSubmit,className:\"form\"},React.createElement(FormGroup,{className:\"mx-auto\"},React.createElement(Label,{for:\"title\"},\"Title\"),React.createElement(Input,{type:\"text\",id:\"title\",name:\"title\",value:this.state.title,onChange:this.onChange})),React.createElement(FormGroup,{className:\"mx-auto\"},React.createElement(Label,{for:\"Content\"},\"Title\"),React.createElement(Input,{type:\"textarea\",id:\"content\",name:\"content\",value:this.state.content,onChange:this.onChange})),React.createElement(FormGroup,{className:\"mx-auto\"},React.createElement(Label,{for:\"Email\"},\"Email\"),React.createElement(Input,{type:\"textarea\",id:\"email\",name:\"email\",value:this.state.email,onChange:this.onChange})),React.createElement(Col,{className:\"text-center\"},React.createElement(Button,null,\"Submit\"))));}}]);return EditPost;}(React.Component);export default EditPost;","map":{"version":3,"sources":["C:/Programowanie/react_blog/frontend/src/components/EditPost.js"],"names":["React","Col","Form","FormGroup","Label","Input","Button","axios","EditPost","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","editedPost","title","state","content","email","put","match","params","id","then","res","console","log","data","catch","error","history","push","get","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass EditPost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.id)\r\n        axios.get(\"/posts/\" + this.props.match.params.id)\r\n        .then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                title: res.data.title,\r\n                content: res.data.content,\r\n                email: res.data.email\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const editedPost = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            email: this.state.email\r\n        }\r\n\r\n        axios.put(\"/posts/\" + this.props.match.params.id, editedPost)\r\n        .then(res => console.log(res.data))\r\n        .catch(error => console.log(error))\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.onSubmit} className=\"form\">\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Content\">Title</Label>\r\n                        <Input type=\"textarea\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Email\">Email</Label>\r\n                        <Input type=\"textarea\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <Col className=\"text-center\"><Button>Submit</Button></Col>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}