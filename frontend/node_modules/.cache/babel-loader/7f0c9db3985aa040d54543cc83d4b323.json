{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programowanie\\\\react_blog\\\\react_blog\\\\src\\\\Formularz\\\\form.js\";\nimport React from 'react';\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      let errId = '';\n      let errTitle = '';\n      let errContent = '';\n\n      if (name === \"id\") {\n        if (value != \"\" && !Number(value)) {\n          errId = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \"Your ID must be a number\");\n        }\n\n        this.setState({\n          errormessage: errId\n        });\n      }\n\n      if (name == \"title\") {\n        if (value.length <= 2) {\n          errTitle = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \"Your title must be more than 2 characters\");\n        }\n\n        this.setState({\n          errormessage: errTitle\n        });\n      }\n\n      if (name == \"content\") {\n        if (value.length <= 100) {\n          errContent = React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, \"Your content must be more than 100 characters\");\n        }\n\n        this.setState({\n          errormessage: errContent\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      id: null,\n      title: \"\",\n      content: \"\",\n      errormessage: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Please enter ID:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Please enter title:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Please enter content:\"), React.createElement(\"textarea\", {\n      className: \"text-area\",\n      type: \"text\",\n      name: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.errormessage));\n  }\n\n}","map":{"version":3,"sources":["C:/Programowanie/react_blog/react_blog/src/Formularz/form.js"],"names":["React","Form","Component","constructor","props","myChangeHandler","event","name","target","value","errId","errTitle","errContent","Number","setState","errormessage","length","state","id","title","content","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,eAXmB,GAWAC,KAAD,IAAW;AACzB,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB;AACA,UAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAGA,UAAIL,IAAI,KAAK,IAAb,EAAmB;AACf,YAAIE,KAAK,IAAG,EAAR,IAAc,CAACI,MAAM,CAACJ,KAAD,CAAzB,EAAkC;AAC9BC,UAAAA,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAR;AAEH;;AACD,aAAKI,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEL;AAAf,SAAd;AACH;;AAID,UAAIH,IAAI,IAAI,OAAZ,EAAoB;AAChB,YAAIE,KAAK,CAACO,MAAN,IAAgB,CAApB,EAAsB;AAClBL,UAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAX;AACH;;AACD,aAAKG,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEJ;AAAf,SAAd;AACH;;AAGD,UAAIJ,IAAI,IAAI,SAAZ,EAAsB;AAClB,YAAIE,KAAK,CAACO,MAAN,IAAgB,GAApB,EAAwB;AACpBJ,UAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAb;AACH;;AACD,aAAKE,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEH;AAAf,SAAd;AACH;;AAID,WAAKE,QAAL,CAAc;AAAC,SAACP,IAAD,GAAQE;AAAT,OAAd;AACH,KA/CkB;;AAEf,SAAKQ,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,IADK;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITL,MAAAA,YAAY,EAAE;AAJL,KAAb;AAOH;;AAwCDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANJ,EAOI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXJ,EAYI;AAAU,MAAA,SAAS,EAAC,WAApB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAgBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBR,EAgBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBb,EAkBQ;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBR,EAoBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWF,YAAhB,CApBR,CADJ;AA2BH;;AA9E6C","sourcesContent":["import React from 'react';\r\n\r\nexport default class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            title: \"\",\r\n            content: \"\",\r\n            errormessage: \"\"\r\n           \r\n        };\r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        let errId = '';\r\n        let errTitle = '';\r\n        let errContent = '';\r\n\r\n\r\n        if (name === \"id\") {\r\n            if (value !=\"\" && !Number(value)) {\r\n                errId = <strong>Your ID must be a number</strong>;\r\n\r\n            }\r\n            this.setState({errormessage: errId});\r\n        }\r\n        \r\n    \r\n\r\n        if (name == \"title\"){\r\n            if (value.length <= 2){\r\n                errTitle = <strong>Your title must be more than 2 characters</strong>;\r\n            }  \r\n            this.setState({errormessage: errTitle});\r\n        }\r\n\r\n        \r\n        if (name == \"content\"){\r\n            if (value.length <= 100){\r\n                errContent = <strong>Your content must be more than 100 characters</strong>;\r\n            }  \r\n            this.setState({errormessage: errContent});\r\n        }\r\n\r\n       \r\n\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form\">\r\n                <p>Please enter ID:</p>\r\n                <input\r\n                    type='text'\r\n                    name='id'\r\n                />\r\n                <p>Please enter title:</p>\r\n                <input\r\n                    type='text'\r\n                    name='title'\r\n                />\r\n                <p>Please enter content:</p>\r\n                <textarea className=\"text-area\"\r\n                    type='text'\r\n                    name='content'\r\n                />\r\n                    <br/><br/>\r\n\r\n                    <button className=\"submitButton\">Submit</button>\r\n\r\n                    <h2>{this.state.errormessage}</h2>\r\n\r\n            </form>\r\n\r\n                        \r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}