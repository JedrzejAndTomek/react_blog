{"version":3,"sources":["components/Navbar.js","components/CreatePost.js","components/Comment.js","components/CommentsList.js","components/CommentsComponent.js","components/Post.js","components/PostsList.js","components/EditPost.js","components/contact.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","props","toggle","setState","isOpen","state","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","PostForm","onChange","e","name","target","value","errTitle","errContent","errEm","length","test","selectedImage","postImage","files","onSubmit","post","title","content","email","fd","FormData","append","axios","then","res","console","log","data","history","push","Form","method","id","action","enctype","FormGroup","Label","for","Input","type","placeholder","Col","Button","React","Comment","deleteComment","delete","obj","_id","catch","error","author","comment","edit","CommentsList","commentsList","comments","map","i","postID","key","get","CommentsComponent","editComment","style","display","justifyContent","width","margin","Post","deletePost","Card","CardBody","CardTitle","CardText","date","class","getCookie","cookieName","ca","decodeURIComponent","document","cookie","split","charAt","substring","indexOf","cookieValue","counter","checkCookie","PostsList","postsList","articles","EditPost","preventDefault","editedPost","put","match","params","Contact","About","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.de5e0f34.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavLink,\r\n    NavItem,\r\n    Container\r\n} from 'reactstrap';\r\n\r\n\r\nclass AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                    <Container>\r\n                        <NavbarBrand href=\"/\">Forum</NavbarBrand>\r\n                         <NavbarBrand href=\"/contact\">Contact</NavbarBrand>\r\n                         <NavbarBrand href=\"/about\">About Us</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/create-article\">Create Article</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport {\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\",\r\n            postImage: null,\r\n            errTitle: \"\",\r\n            errContent: \"\",\r\n            errEm: \"\"\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let errTitle = '';\r\n        let errContent = '';\r\n        let errEm = '';\r\n\r\n\r\n        // walidacja tytułu    \r\n        if (name === \"title\"){\r\n            if (value.length <= 2 || value.length >=20){\r\n                errTitle = <strong>Your title must be more than 2 and less then 20 characters </strong>;\r\n            }  \r\n            this.setState({errTitle: errTitle});\r\n        }\r\n\r\n        // walidacja treści  \r\n        if (name === \"content\"){\r\n            if (value.length <= 100 || value.length >=800 ){\r\n                errContent = <strong>Your content must be more than 100 and less then 800 characters</strong>;\r\n            }  \r\n            this.setState({errContent: errContent});\r\n        }\r\n\r\n         // walidacja e-maila  \r\n        if (name === \"email\") {\r\n            if (!/^[a-z\\d]+[\\w\\d.-]*@(?:[a-z\\d]+[a-z\\d-]+\\.){1,5}[a-z]{2,6}$/i.test(value)) {\r\n                errEm = <strong>Please enter valid e-mail</strong>;\r\n\r\n            }\r\n            this.setState({errEm: errEm});\r\n        }\r\n\r\n            this.setState({[name]: value});\r\n    }\r\n\r\n    // wybranie zdjecia\r\n    selectedImage = e => {\r\n        this.setState({\r\n            postImage: e.target.files[0]\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    onSubmit = (e) => {\r\n        //e.preventDefault()\r\n\r\n        const post = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            email: this.state.email\r\n        }\r\n\r\n        \r\n        \r\n        const fd = new FormData();\r\n        fd.append('postImage', this.state.postImage, this.state.postImage.name);\r\n        axios.post('/posts', post, fd)\r\n        .then(res => console.log(res.data))\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\",\r\n            postImage: null\r\n        })\r\n\r\n         \r\n       console.log(post);\r\n       console.log(fd);\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form method=\"post\" id=\"PostForm\" action=\"admin/posts/create-post\" enctype=\"multipart/form-data\" onSubmit={this.onSubmit} className=\"form\">\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title:\" onChange={this.onChange} />\r\n                        <h6>{this.state.errTitle}</h6>\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Content\">Content</Label>\r\n                        <Input type=\"textarea\" id=\"content\" name=\"content\" placeholder=\"Content:\" onChange={this.onChange} />\r\n                        <h6>{this.state.errContent}</h6>\r\n                    </FormGroup>\r\n                    \r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Email\">Email</Label>\r\n                        <Input type=\"textarea\" id=\"email\" name=\"email\" placeholder=\"Email:\" onChange={this.onChange} />\r\n                        <h6>{this.state.errEm}</h6>\r\n                    </FormGroup>\r\n                    \r\n                        <div>\r\n                        <input type=\"file\" onChange={this.selectedImage}/>\r\n                        </div>\r\n\r\n                    <Col className=\"text-center\"><Button type=\"submit\">Submit</Button></Col>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Comment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    deleteComment = () => {\r\n        axios.delete('/comments/' + this.props.obj._id)\r\n        .then(res => {\r\n            console.log('Comment deleted!')\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"comment\">\r\n                <div>\r\n                    <p>By: {this.props.obj.author}</p>\r\n                    <h6>{this.props.obj.comment}</h6>\r\n                </div>\r\n                <div className=\"comment-icons\">\r\n                    <a onClick={() => this.props.edit(this.props.obj._id)}><i className=\"fa fa-pencil-square-o\"></i></a>\r\n                    <a onClick={this.deleteComment} href='/' ><i className=\"fa fa-trash-o ml-2\"></i></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Comment from './Comment';\r\n\r\nclass CommentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/comments/')\r\n        .then(res => {\r\n            this.setState({\r\n                comments: res.data\r\n            })\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    commentsList = () => {\r\n        return this.state.comments.map((res, i) => {\r\n            if (res.postID === this.props.postID) {\r\n                return <Comment edit={this.props.edit} obj={res} key={i} />\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Komentarze:</p>\r\n                {this.commentsList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentsList;","import React from 'react';\r\nimport CommentsList from './CommentsList';\r\nimport axios from 'axios';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nclass CommentsComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            comment: \"\",\r\n            author: \"\",\r\n            postID: this.props.postID\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n\r\n        const comment = {\r\n            comment: this.state.comment,\r\n            author: this.state.author,\r\n            postID: this.state.postID\r\n        }\r\n\r\n        console.log(comment)\r\n\r\n        axios.post('/comments', comment)\r\n        .then(res => console.log(res))\r\n\r\n        this.setState({\r\n            comment: '',\r\n            author: ''\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    editComment = (id) => {\r\n        axios.get('/comments/' + id)\r\n        .then(res => {\r\n            this.setState({\r\n                comment: res.data.comment,\r\n                author: res.data.author\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const buttonStyle = {\r\n            width: \"100px\",\r\n            margin: \"auto\"\r\n        }\r\n\r\n        const formStyle = {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\"\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <CommentsList postID={this.props.postID} edit={this.editComment} />\r\n                <p>Dodaj komentarz:</p>\r\n                <Form onSubmit={this.onSubmit} style = {formStyle}>\r\n                    <Input type=\"text\" value={this.state.comment} name=\"comment\" onChange={this.onChange} placeholder=\"Comment:\" />\r\n                        \r\n                    <Input type=\"text\" value={this.state.author} name=\"author\" onChange={this.onChange} placeholder=\"Author:\" className=\"ml-2\" />\r\n                    <Button style={buttonStyle} type=\"submit\" className=\"ml-2\">Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentsComponent;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardText, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport CommentsComponent from './CommentsComponent';\r\n\r\nclass Post extends React.Component {\r\n\r\n    deletePost = () => {\r\n        axios.delete(\"/posts/\" + this.props.obj._id)\r\n        .then((res) => {\r\n            console.log(\"Post deleted!\")\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"p-3\">\r\n                    <Card className=\"mx-auto\">\r\n                        <CardBody>\r\n                            <CardTitle><h5>{this.props.obj.title}</h5></CardTitle>\r\n                            <CardText>\r\n                                <p>{this.props.obj.content}</p>\r\n                                <h5>{this.props.obj.email}</h5>\r\n                                <footer className=\"post-footer\">\r\n                                    <p>Opublikowano: {this.props.obj.date}</p>\r\n                                    <div>\r\n                                        <Button href=\"/\" onClick={this.deletePost} className=\"float-right\"><i class=\"fa fa-trash-o\"></i></Button>\r\n                                        <Button href={\"/edit-post/\" + this.props.obj._id} className=\"mr-2 float-right\">Edit Post</Button>\r\n                                    </div>\r\n                                </footer>\r\n                                \r\n                                <CommentsComponent postID={this.props.obj._id} />\r\n                            </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Post from './Post';\r\n\r\nfunction setCookie(cookieName, cookieValue) {\r\n\r\n   \r\n    document.cookie = cookieName + \"=\" + cookieValue;\r\n};\r\n\r\nfunction getCookie(cookieName) {\r\n    var name = cookieName + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n\r\n    var ca = decodedCookie.split(\";\");\r\n\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var cookie = ca[i];\r\n        while (cookie.charAt(0) === \" \") {\r\n            cookie = cookie.substring(1);\r\n        }\r\n        if (cookie.indexOf(name) === 0) {\r\n            return cookie.substring(name.length, cookie.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction checkCookie() {\r\n\r\n    var counter=getCookie(\"Visits\");\r\n    if (counter === null){\r\n        counter = 1;\r\n    } else {\r\n\r\n            counter ++;\r\n            setCookie(\"Visits\", counter);\r\n        }\r\n    }\r\n\r\n\r\ngetCookie();\r\ncheckCookie();\r\n\r\n\r\nclass PostsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articles: []\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        axios.get(\"/posts\")\r\n        .then(res => {\r\n            this.setState({\r\n                articles: res.data\r\n            })\r\n        })\r\n        .catch(error => {console.log(error)});\r\n    }\r\n\r\n    postsList = () => {\r\n        return this.state.articles.map((res, i) => {\r\n            return <Post obj={res} key={i} />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.postsList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport {\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass EditPost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            content: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.id)\r\n        axios.get(\"/posts/\" + this.props.match.params.id)\r\n        .then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                title: res.data.title,\r\n                content: res.data.content,\r\n                email: res.data.email\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const editedPost = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            email: this.state.email\r\n        }\r\n\r\n        axios.put(\"/posts/\" + this.props.match.params.id, editedPost)\r\n        .then(res => console.log(res.data))\r\n        .catch(error => console.log(error))\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.onSubmit} className=\"form\">\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Content\">Title</Label>\r\n                        <Input type=\"textarea\" id=\"content\" name=\"content\" value={this.state.content} onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mx-auto\">\r\n                        <Label for=\"Email\">Email</Label>\r\n                        <Input type=\"textarea\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.onChange} />\r\n                    </FormGroup>\r\n                    <Col className=\"text-center\"><Button>Submit</Button></Col>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPost;","import React from 'react'\r\n\r\nexport default function Contact () {\r\n    return (\r\n    <div>\r\n\r\n    <h1>Nasze dane kontaktowe:</h1>\r\n        <h3>Jędrzej i Tomek</h3>\r\n        <h3>Ulica Powstańców Warszawskich 89</h3>\r\n        <h3>80-000 Warszawa</h3>\r\n\r\n    </div>\r\n    );\r\n} ","import React from \"react\";\r\n\r\nexport default function About() {\r\n\r\n        return (\r\n\r\n            <div>\r\n               <h2>Blog made by Jedrzej and Tomek &copy;</h2>\r\n            </div>\r\n    );\r\n    \r\n\r\n}","import React from 'react';\r\nimport AppNavbar from './components/Navbar';\r\nimport PostForm from './components/CreatePost';\r\nimport PostsList from './components/PostsList';\r\nimport EditPost from './components/EditPost';\r\nimport Contact from './components/contact.js'\r\nimport About from './components/about';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <header><AppNavbar /></header>\r\n          <Switch>\r\n            <Route path=\"/create-article\" component={PostForm} />\r\n            <Route exact path=\"/\" component={PostsList} />\r\n            <Route path=\"/edit-post/:id\" component={EditPost} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/about\" component={About} />\r\n          </Switch>  \r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}